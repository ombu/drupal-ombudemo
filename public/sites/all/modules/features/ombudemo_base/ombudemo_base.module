<?php
/**
 * @file
 * Code for the Tiles Demo feature.
 */

include_once 'ombudemo_base.features.inc';

/**
 * Implements hook_menu().
 */
function ombudemo_base_menu() {
  $items = array();

  $items['contact'] = array(
    'title' => 'Contact',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ombudemo_contact_form'),
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
 * Implements hook_tiles_widths().
 */
function ombudemo_base_tiles_widths() {
  return array(
    'ombucleanup' => array(
      'site_logo' => 2,
    ),
    'menu' => array(
      'header-menu' => 6,
    ),
    'search' => array(
      'form' => 4,
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ombudemo_base_form_search_block_form_alter(&$form, $form_state) {
  $form['#attributes']['class'][] = 'navbar-form';
  $form['#attributes']['class'][] = 'navbar-right';
}

/**
 * Implements hook_preprocess_block().
 */
function ombudemo_base_preprocess_block(&$variables) {
  if ($variables['block']->module == 'search') {
    $variables['classes_array'][] = 'navbar-right';
  }
}

/**
 * Form callback for contact page.
 */
function ombudemo_contact_form($form, &$form_state) {
  $form['name'] = array(
    '#type' => 'textfield',
    '#title' => t('Your name'),
    '#required' => TRUE,
  );
  $form['company'] = array(
    '#type' => 'textfield',
    '#title' => t('Your company'),
  );

  $options = array(
    t('Google / Search'),
    t('Client reference'),
    t('Television Ad'),
    t('YouTube'),
    t('Multi-level Marketing Campaign'),
    t('Other'),
  );
  $form['referal'] = array(
    '#type' => 'select',
    '#title' => t('How did you hear about us?'),
    '#options' => drupal_map_assoc($options, $options),
  );

  $options = array(
    t('Design'),
    t('UX'),
    t('Development'),
    t('Tech Strategy'),
    t('Infrastructure'),
    t('Great Jokes'),
  );
  $form['needs'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Your needs (select all that apply)'),
    '#options' => drupal_map_assoc($options, $options),
  );

  $form['thoughts'] = array(
    '#type' => 'textarea',
    '#title' => t('Your thoughts'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
    '#attributes' => array(
      'class' => array('btn-primary'),
    ),
  );

  return $form;
}

/**
 * Submit handler for contact demo form.
 */
function ombudemo_contact_form_submit($form, &$form_state) {
  drupal_set_message(t('Thank you for your request. We will contact you soon.'));
}

/**
 * Implements hook_field_attach_view_alter().
 */
function ombudemo_base_field_attach_view_alter(&$output, $context) {
  // Alter taxonomy display to view as bootstrap labels.
  if (isset($output['field_tags'])) {
    foreach (element_children($output['field_tags']) as $child) {
      $output['field_tags'][$child]['#markup'] =
        '<span class="label label-info">' .
        $output['field_tags'][$child]['#markup'] .
        '</span>';
    }
  }
  if (isset($output['field_topics'])) {
    foreach (element_children($output['field_topics']) as $child) {
      $output['field_topics'][$child]['#markup'] =
        '<span class="label label-primary">' .
        $output['field_topics'][$child]['#markup'] .
        '</span>';
    }
  }
}

/**
 * Implements hook_node_view().
 */
function ombudemo_base_node_view($node, $view_mode, $langcode) {
  if (isset($node->content['field_sections-navigation'])) {
    $node->content['field_sections-navigation']['#access'] = FALSE;
  }
}

/**
 * Implements hook_tiles_section_form_alter().
 */
function ombudemo_base_tiles_section_form_alter(&$element, $context) {
  $item = NULL;
  if (array_key_exists($context['delta'], $context['items'])) {
    $item = $context['items'][$context['delta']];
  }

//   // Group section settings into a fieldset.
//   unset($element['value']['#prefix']);
//   unset($element['value']['#suffix']);
//   unset($element['settings']['#prefix']);
//   unset($element['settings']['#suffix']);
//   $element['settings']['#type'] = 'fieldset';
//   $element['settings']['#title'] = t('Section Settings');
//   $element['settings']['#collapsible'] = TRUE;
//   $element['settings']['#collapsed'] = TRUE;

  $element['settings']['width'] = array(
    '#type' => 'select',
    '#title' => t('Width'),
    '#options' => array(
      'width-normal' => 'Normal',
      'width-wide' => 'Wide',
      'width-full-width' => 'Full width',
    ),
    '#default_value' => isset($item['settings']['width']) ? $item['settings']['width'] : 'width-normal',
  );

  $element['settings']['style'] = array(
    '#type' => 'select',
    '#title' => t('Style'),
    '#options' => array(
      'style-white' => 'White',
      'style-blue' => 'Blue',
      'style-light-blue' => 'Light Blue',
    ),
    '#default_value' => isset($item['settings']['style']) ? $item['settings']['style'] : 'style-white',
  );
}

/**
 * Implements hook_preprocess_tiles_section().
 */
function ombudemo_base_preprocess_tiles_section(&$variables) {
  $settings = $variables['element']['settings'];
  // Add class based on selected color.
  $variables['classes_array'][] = $settings['style'];
  $variables['classes_array'][] = $settings['width'];
}

/**
 * Implements hook_field_sociallinks_services_alter().
 */
function ombudemo_base_field_sociallinks_services_alter(&$services) {
  // Add slideshare to services list.
  $services['slideshare'] = 'Slideshare';
  $services['pinterest'] = 'Pinterest';
}
